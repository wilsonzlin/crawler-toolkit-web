CakeFest 2024: The Official CakePHP Conference

Escaping from HTML »

« Basic syntax

Submit a Pull Request
Report a Bug

PHP tags

When PHP parses a file, it looks for opening and closing tags, which are
<?php and ?> which tell PHP to
start and stop interpreting the code between them. Parsing in this manner
allows PHP to be embedded in all sorts of different documents, as
everything outside of a pair of opening and closing tags is ignored by the
PHP parser.

PHP includes a short echo tag <?= which is a
short-hand to the more verbose <?php echo.

Example #1 PHP Opening and Closing Tags

1. <?php echo 'if you want to serve PHP code in XHTML or XML documents,
use these tags'; ?>

2. You can use the short echo tag to <?= 'print this string' ?>.
It's equivalent to <?php echo 'print this string' ?>.

3. <? echo 'this code is within short tags, but will only work '.
'if short_open_tag is enabled'; ?>

Short tags (example three) are available by default but can be disabled
either via the short_open_tag
php.ini configuration file directive, or are disabled by default if
PHP is built with the --disable-short-tags configuration.

Note:

As short tags can be disabled it is recommended to only use the normal
tags (<?php ?> and <?= ?>) to
maximise compatibility.

If a file contains only PHP code, it is preferable to omit the PHP closing tag
at the end of the file. This prevents accidental whitespace or new lines
being added after the PHP closing tag, which may cause unwanted effects
because PHP will start output buffering when there is no intention from
the programmer to send any output at that point in the script.

<?php
echo "Hello world";

// ... more code

echo "Last statement";

// the script ends here with no PHP closing tag

＋add a note

User Contributed Notes 1 note

up

down

-14

Anonymous ¶

2 months ago

A whitespace or newline character must follow '<?php' and precede '?>'.

＋add a note